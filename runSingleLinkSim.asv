%% Function runSingleLinkSim()
% Parameters
%  K - the number of packets in the application message
%  p - the probability of failure 
%  N - the number of simulations to run
%
%% Task # 1
% prepare the command window
clc;
clear all;
close all;

% define Variables
K = [1 5 15 50 100];
N = 1000;
p = 0:0.01:0.99;%  0% chance since there is no link figure

% run for each value of K and generate each figure
for i = 1:length(K) 
   resultList = ones(1,100);
   g = 0;
        calculatedResult = K(i)./(1-p);% calculated result
        % run through each probability for Single Link Simulation
        for p1 = 0:0.01:0.99
            g = g+1;
            resultList(1,g) = runSingleLinkSim2(K(i),p1,N);% find the simulated results
        end
            
        %fprintf("%5.2f \n",resultList);
        figure(i);
        hold on;
        % plot results simulated
        plot(p, resultList,'o');
        %plot results calculated
        plot(p,calculatedResult);
        set(gca, 'YScale', 'log');
        
        % Make graph look nice :)
            xlim([0 1]);
            title('Single Link Network');xlabel('Calculated');ylabel('Simulated Result');
    
end
hold off

% generate the graph with all results on it on one figure
 figure(6);% all figures will compile on this figure 
for i = 1:length(K) % shuffle through each value of K
resultList = ones(1,100);
        g = 0;
        calculatedResult = K(i)./(1-p);% calculated result
        for p1 = 0:0.01:0.99
            g = g+1;
            resultList(1,g) = runSingleLinkSim2(K(i),p1,N);% find the simulated results
        end

    % plot results simulated
    hold on;
    plot(p,resultList,'o');
    plot(p,calculatedResult);
    set(gca, 'YScale', 'log');
    % Make graph look nice
      
        %xline(K(i));
        title('Calc vs Sim (all)');xlabel('Calculated');ylabel('Simulated Result');

end
hold off;



% Returns: the average numeric result across the total simulations
function result = runSingleLinkSim2(K,p,N)

    simResults = ones(1,N); % a place to store the result of each simulation
    
    for i=1:N
        txAttemptCount = 0; % transmission count
        pktSuccessCount = 0; % number of packets that have made it across
    
        while pktSuccessCount < K
            
            r = rand; % generate random number to determine if packet is successful (r > p)
            txAttemptCount = txAttemptCount + 1; % count 1st attempt
        
            % while packet transmissions is not successful (r < p)
            while r < p
                r = rand; % transmit again, generate new success check value r
                txAttemptCount = txAttemptCount + 1; % count additional attempt
            end
        
            pktSuccessCount = pktSuccessCount + 1; % increase success count after success (r > p)
        end
    
        simResults(i) = txAttemptCount; % record total number of attempted transmissions before entire application message (K successful packets) transmitted
    end

    result = mean(simResults);
end